=head1 NAME

cower - a simple AUR downloader

=head1 SYNOPSIS

Usage: I<cower> E<lt>operationE<gt> [ options ] [ targets ]

=head1 DESCRIPTION

cower is a simple tool to get information and download packages from the Arch
User Repository (AUR). Invoking cower consists of supplying an operation, any
applicable options, and usually one or more targets. If a target is specified
as a lone dash (-), additional targets will be read from stdin.

=head1 OPERATIONS

=over 4

=item B<-d, --download>

Download I<target>. Pass this option twice to fetch dependencies (done
recursively).

=item B<-i, --info>

Show info for I<target>. Pass this option twice to fetch more detailed info.

=item B<-m, --msearch>

Search for packages maintained by I<target>.

=item B<-s, --search>

Search for packages with the I<target>(s) as the search term(s). Queries with
multiple targets will return the result of the intersection of all query
results. Extended regex patterns as defined by POSIX in B<regex>(7) are
allowed.

B<Note:> Regex is more or less implemented as a hack, since the AUR does not
actually support this. cower will search based on the first span of at least 2
consecutive non-regex characters it finds and will filter using the regular
expression provided, afterwards. There's no guarantee that complex patterns
will return expected results.

=item B<-u, --update>

Check foreign packages for updates in the AUR. Without any arguments, all
manually installed packages will be checked. If targets are supplied, only
those targets will be checked. This operation can be combined with the
B<--download> operation.

=back


=head1 OPTIONS

=over 4

=item B<-b>, B<--brief>

Show output in a more script friendly format. Use this if you're wrapping cower
for some sort of automation.

=item B<-c>, B<--color>[B<=>I<WHEN>]

Use colored output. I<WHEN> is B<never>, B<always> or B<auto>. Color will be
disabled in a pipe unless I<WHEN> is set to always.

=item B<--debug>

Show debug output. This option should be passed first if used.

=item B<-f, --force>

Overwrite existing files when downloading.

=item B<--format=>I<FORMAT>

Print outside from B<--info>, B<--search>, and B<--msearch> operations
described by the provided format string. See the FORMATTING section.

=item B<-h, --help>

Display the help message and quit.

=item B<--ignore=>I<PKG>

Ignore a package upgrade. Can be used more than once. Also accepts a comma
delimited list as a single argument. Packages listed in pacman's IgnorePkg
directive are honored.

=item B<--ignorerepo>[B<=>I<REPO>]

Ignore a binary repo when checking for updates. Can be used more than once.
Also accepts a comma delimited list as a single argument. When the argument
to this option is left blank, all binary repos are ignored and only the AUR
is queried.

=item B<--listdelim=>I<STRING>

Specify a delimiter when printing list formatters, default to 2 spaces. This
option only has an effect when using the B<-ii> operation combined with
B<--format>.  See the FORMATTING section.

=item B<--no-ignore-ood>

The reverse of B<--ignore-ood>.

=item B<-o, --ignore-ood>

Ignore all results marked as out of date.

=item B<--sort=>I<KEY>, B<--rsort=>I<KEY>

Sort the results in ascending or descending order, respectively, by I<KEY>
where I<KEY> is B<firstsubmitted>, B<lastmodified>, B<license>, B<maintainer>,
B<name>, B<outofdate>, B<version> or B<votes>.

=item B<-p, --from-pkgbuild>

Interpret non-option arguments to cower as paths to PKGBUILDs which will be
parsed for depends and makedepends. These dependencies will then be re-used
as package targets for cower.

=item B<-q, --quiet>

Output less.

=item B<-t> I<DIR>, B<--target=>I<DIR>

Download targets to alternate directory, specified by I<DIR>. Either a relative
or absolute path can be specified, but all components of the path must exist.

=item B<--threads=>I<NUM>

Limit the number of threads created, with a default of 10. In practice, you
should never need to bother with this setting. Other than the case of an
B<--update> operation with no targets specified, a thread is created for each
target provided to cower. If cower has fewer targets than threads specified,
the number of threads created will instead be the number of targets.

=item B<--timeout=>I<NUM>

Specify how long libcurl is willing to wait for a connection to be made, in
seconds. By default, this is 10 seconds. Setting this value to 0 will disable
timeouts.

=item B<-v, --verbose>

Output more. This primarily affects the update operation.

=item B<-V, --version>

Display version and exit.

=back

=head1 FORMATTING

When the B<--format> option is used with the B<--search>, B<--msearch>, or
B<--info> operations, the following sequences are interpreted within the
formatter:

  %a    last modified

  %c    category

  %d    description

  %i    id

  %l    license

  %m    maintainer

  %n    name

  %o    votes

  %p    AUR page

  %s    submission date

  %t    out of date (yes/no)

  %u    project URL

  %v    version

  %%    a literal %

When B<--info> is specified twice, the following formatters are also available
(if the PKGBUILD specifies them). Items in these lists are delimited according
to the B<--listdelim> option.

  %C    conflicts

  %D    depends

  %M    makedepends

  %O    optdepends

  %P    provides

  %R    replaces

Full printf formatter support with justification and field width is supported,
e.g. '%-20o'. Simple backslash escape sequences are also honored for lowercase
formatters -- see B<printf>(1).

=head1 CONFIG FILE

cower honors a config file which will be looked for first at:

  $XDG_CONFIG_HOME/cower/config

and falling back to:

  $HOME/.config/cower/config

A documented example config file can be found at /usr/share/doc/cower/config.

=head1 AUTHOR

Dave Reisner E<lt>d@falconindy.comE<gt>

